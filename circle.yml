machine:
  pre:
    - sudo apt-get install libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev
  environment:
      # GOROOT is not set by default
      GOROOT: ""
      PATH: "/usr/local/go/bin:/usr/local/go_workspace/bin:${HOME}/.go_workspace/bin:${PATH}"
      GOPATH: "${HOME}/.go_workspace:/usr/local/go_workspace:${HOME}/.go_project"

dependencies:
  override:
    # symlink the project into golang's expected project hierarchy
    - mkdir -p ~/.go_project/src/github.com/drausin
    - ln -s ~/libri ~/.go_project/src/github.com/drausin/libri

    # install project golang dependencies
    - go get -t -d -v ./...
    - make tools

    # install RocksDB (possibly using cached directory if it exists)
    - if [ ! -d "${HOME}/rocksdb-5.2.1" ]; then cd ~ && wget https://github.com/facebook/rocksdb/archive/v5.2.1.zip && unzip ~/v5.2.1.zip -d ~; fi
    - cd ~/rocksdb-5.2.1 && make static_lib && sudo make install

    # build gorocksdb driver
    - CGO_CFLAGS="-I/usr/local/include/rocksdb" CGO_LDFLAGS="-L/usr/local/lib/librocksdb.a -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy" go get github.com/tecbot/gorocksdb
  cache_directories:
    - ~/rocksdb-5.2.1

compile:
  pre:
    - mkdir -p build/bin
  override:
    - make build
    - go build -o build/bin/libri libri/main.go
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o build/bin/libri libri/main.go

test:
  pre:
    - mkdir $CIRCLE_ARTIFACTS/build
  override:
    - case $CIRCLE_NODE_INDEX in 0) make test-cover acceptance ;; 1) make lint ;; esac:
        parallel: true
  post:
    - bash <(curl -s https://codecov.io/bash) -f test-coverage-merged.cov
    - cp acceptance.log $CIRCLE_ARTIFACTS
    - cp build/bin $CIRCLE_ARTIFACTS/build
