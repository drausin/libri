version: 2
jobs:
  build:
    working_directory: /go/src/github.com/drausin/libri
    docker:
      - image: daedalus2718/libri-build
    parallelism: 2
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-vendor-{{ checksum "Gopkg.lock" }}
      - run:
          name: Install dependencies
          command: make get-deps
      - save_cache:
          key: v1-vendor-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor
      - run:
          name: Build
          command: |
            if [[ ${CIRCLE_NODE_INDEX} -eq 0 ]]; then
              make build          # ensure everything builds ok
              make build-static   # build linux binary for Docker image
              make docker-image   # ensure Docker image builds ok, even though only used on deployment
            fi
      - store_artifacts:
          path: deploy/bin
      - run:
          name: Test
          command: |
            case ${CIRCLE_NODE_INDEX} in
              0)
                make demo
                ;;
              1)
                make test-cover
                bash <(curl -s https://codecov.io/bash) -f artifacts/cover/test-coverage-merged.cov
                make acceptance
                if [[ "${CIRCLE_BRANCH}" == "develop-build-intensive" ]]; then test-stress; fi
                ;;
            esac
      - run:
          name: Lint
          command: |
            if [[ ${CIRCLE_NODE_INDEX} -eq 0 ]]; then
              make lint
              if [[ "${CIRCLE_BRANCH}" == "develop-build-intensive" ]]; then make lint-slow; fi
            fi

      - deploy:
          name: Publish docker image
          command: |
            if [[ "${CIRCLE_BRANCH}" == "develop" ]]; then
              docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
              docker push daedalus2718/libri:latest
            fi
      - run:
          name: Run benchmarks
          command: |
            if [[ "${CIRCLE_BRANCH}" == "develop" && ${CIRCLE_NODE_INDEX} -eq 0 ]]; then
              make bench
            fi
      - store_artifacts:
          path: artifacts
